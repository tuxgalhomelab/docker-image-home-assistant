#!/usr/bin/env bash
set -e -o pipefail

# Add repo specific metadata here.

PACKAGE_NAME="Home Assistant"
UPSTREAM_IMAGE_CONFIG_KEY_PREFIX="BASE_IMAGE"
UPSTREAM_VERSION_CONFIG_KEY="HOME_ASSISTANT_VERSION"
UPSTREAM_GIT_REPO="https://github.com/home-assistant/core"
GIT_REPO_TAGS_CUSTOM_FILTERING_REGEX='^.+\.\d+b\d+$'
TEST_TYPE="background"
TEST_CONTAINER_TYPE="homeassistant"
TEST_CONTAINER_START_WAIT_SECONDS="10"

ENABLED_INTGRATIONS_FILE="${repo_dir:?}/config/enabled-integrations.txt"
DISABLED_INTGRATIONS_FILE="${repo_dir:?}/config/disabled-integrations.txt"

current_upstream_version() {
    get_config_arg ${UPSTREAM_VERSION_CONFIG_KEY:?}
}

latest_upstream_version() {
    git_repo_latest_tag "${UPSTREAM_GIT_REPO:?}.git"
}

update_integration_files() {
    local ha_version="${1:?}"
    local hasspkgutil_version=$(get_config_arg "HASS_PKG_UTIL_VERSION")
    local base_image=$(get_config_arg "BASE_IMAGE_NAME"):$(get_config_arg "BASE_IMAGE_TAG")
    docker run --rm -v ${ENABLED_INTGRATIONS_FILE:?}:/root/ei.txt -v ${DISABLED_INTGRATIONS_FILE:?}:/root/di.txt ${base_image:?} sh -c "homelab install-tuxdude-go-package TuxdudeHomeLab/hasspkgutil ${hasspkgutil_version:?} >/dev/null 2>&1 && hasspkgutil -mode-update -ha-version ${ha_version:?} -enabled-integrations /root/ei.txt -disabled-integrations /root/di.txt"
}

update_latest_upstream_version() {
    local cur_ver="${1:?}"
    local latest_ver="${2:?}"
    update_integration_files "${latest_ver:?}"
    echo "Updating ${PACKAGE_NAME:?} ${UPSTREAM_VERSION_CONFIG_KEY:?} '${cur_ver:?}' -> '${latest_ver:?}'"
    set_config_arg "${UPSTREAM_VERSION_CONFIG_KEY:?}" "${latest_ver:?}"
    git add ${ARGS_FILE:?}
}

test_start_container() {
    local container_name="${1:?}"
    docker run \
        --name ${container_name:?} \
        --detach \
        --rm \
        --publish 127.0.0.1:8082:8123 \
        ${IMAGE:?}
}

test_image_after_container_startup() {
    local container_name="${1:?}"

    set +e
    local http_status_code=$(\
        curl -w "%{http_code}" --silent --output /dev/null --location http://127.0.0.1:8082/)
    local return_code=$?
    set -e

    if [[ $return_code != "0" ]]; then
        echo "Test failed: Obtained non-zero return code"
        echo "Output: ${http_status_code}"
        echo "Return Code: ${return_code}"
        test_cleanup_container ${container_name:?}
        exit 1
    fi
    if [[ ${http_status_code:?} != "200" ]]; then
        echo "Test failed: Status code is not 200"
        echo "Output: ${http_status_code}"
        echo "Return Code: ${return_code}"
        test_cleanup_container ${container_name:?}
        exit 1
    fi
}
